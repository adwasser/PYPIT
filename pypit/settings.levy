### Mosaic properties
mosaic ndet 1                         # Number of detectors in the mosaic
mosaic latitude 37.3413889             # Latitude of the telescope
mosaic longitude +121.642778          # Longitude of the telescope (NOTE: West should correspond to positive longitudes)
mosaic elevation 1283.0               # Elevation of the telescope (in m)
mosaic reduction ARMED                # Which reduction pipeline should be used for this instrument

### Detector properties
det01 xgap 0.0                        # Gap between the square detector pixels (expressed as a fraction of the x pixel size -- x is predominantly the dispersion axis)
det01 ygap 0.0                        # Gap between the square detector pixels (expressed as a fraction of the y pixel size -- x is predominantly the dispersion axis)
det01 ysize 1.0                       # The size of a pixel in the y-direction as a multiple of the x pixel size (i.e. xsize = 1.0 -- x is predominantly the dispersion axis)
det01 darkcurr 0.0                    # Dark current (e-/hour)
det01 ronoise 12.5                    # Read-out noise (e-)
det01 gain 3.0                        # Inverse gain (e-/ADU)
det01 saturation 65535.0              # The detector Saturation level
det01 nonlinear 0.76                  # Percentage of detector range which is linear (i.e. everything above nonlinear*saturation will be flagged as saturated)
det01 numamplifiers 2                 # Number of amplifiers
det01 ampsec01 [:,0:1024]         # For each amplifier, you should specify the detector sections each amplifier reads out (values are inclusive).
det01 datasec01 [:,0:1024]        # Either the data sections or the header keyword where the valid data sections can be obtained
det01 oscansec01 [:,2049:2080]    # Either the overscan sections or the header keyword where the valid overscan sections can be obtained
det01 ampsec02 [:,1024:2048]      # For each amplifier, you should specify the detector sections each amplifier reads out (values are inclusive).
det01 datasec02 [:,1024:2048]     # Either the data sections or the header keyword where the valid data sections can be obtained
det01 oscansec02 [:,2080:2111]    # Either the overscan sections or the header keyword where the valid overscan sections can be obtained
det01 suffix _blue                    # Suffix to be appended to all saved calibration and extraction frames

### Detector properties
det01 xgap 0.0                        # Gap between the square detector pixels (expressed as a fraction of the x pixel size -- x is predominantly the dispersion axis)
det01 ygap 0.0                        # Gap between the square detector pixels (expressed as a fraction of the y pixel size -- x is predominantly the dispersion axis)
det01 ysize 1.0                       # The size of a pixel in the y-direction as a multiple of the x pixel size (i.e. xsize = 1.0 -- x is predominantly the dispersion axis)
det01 darkcurr 1.0                    # Dark current (e-/hour)
det01 ronoise 3.0                     # Read-out noise (e-)
det01 gain 1.031                      # Inverse gain (e-/ADU)
det01 saturation 65535.0              # The detector Saturation level
det01 nonlinear 0.80                  # Percentage of detector range which is linear (i.e. everything above nonlinear*saturation will be flagged as saturated)
det01 numamplifiers 1                 # Number of amplifiers
det01 ampsec01 [0:4608,0:2080]        # For each amplifier, you should specify the detector sections each amplifier reads out (values are inclusive).
det01 datasec01 [0:4608,0:2047]       # Either the data sections or the header keyword where the valid data sections can be obtained
det01 oscansec01 [0:4608,2049:2080]   # Either the overscan sections or the header keyword where the valid overscan sections can be obtained
#det01 suffix _blue                  # Suffix to be appended to all saved calibration and extraction frames

### Checks to perform
check 01.NAXIS 2                    # THIS IS A MUST! It performs a standard check to make sure the data are 2D.
check 01.DSENSOR e2v_2kx4k_42-90    # Check the CCD name

### Keyword Identifiers
keyword target 01.OBJECT               # Header keyword for the name given by the observer to a given frame
keyword idname 01.OBSTYPE              # The keyword that identifies the frame type (i.e. bias, flat, etc.)
keyword time 01.TSEC                   # The time stamp of the observation (i.e. decimal MJD)
keyword date 01.DATE                   # The date of the observation (in the format YYYY-MM-DD  or  YYYY-MM-DDTHH:MM:SS.SS)
keyword equinox None                   # The equinox to use
keyword ra 01.RA                       # Right Ascension of the target
keyword dec 01.DEC                     # Declination of the target
keyword naxis0 01.NAXIS2               # Number of pixels along the zeroth axis
keyword naxis1 01.NAXIS1               # Number of pixels along the first axis
keyword exptime 01.EXPTIME             # Exposure time keyword
keyword filter1 None                   # Filter 1
keyword filter2 None                   # Filter 2
keyword decker 01.DECKRNAM             # Which decker is being used
keyword lamps 01.CSRCNAM               # Which lamp is being used
keyword lampstat01 01.HALOGEN1         # Status of a lamp
keyword lampstat02 01.HALOGEN2         # Status of a lamp
keyword lampstat03 01.THORIUM1         # Status of a lamp
keyword lampstat04 01.THORIUM2         # Status of a lamp
keyword slitwid None                   # Slit Width
keyword slitlen 01.DECKRNAM            # Slit Length
keyword detrot None                    # Detector Rotation angle
keyword cdangle None                   # Cross-disperser angle
keyword echangle None                  # Echelle angle
keyword crossdisp None                 # Cross-disperser

### Fits properties
fits timeunit s                     # The unit of keyword+time (s=seconds, m=minutes, h=hours, mjd=MJD, dt=datetime)
fits calwin 12.0                    # The window of time in hours to search for calibration frames for a science frame
fits dataext 0                      # Extension number of data
fits numhead 1                      # How many headers need to be read in for a given file
fits headext01 0                    # Extension number of header (one for each headnum, starting with 01)

### Science frames
science idname OBJECT               # Header key value of science frame for header keyword keyword+idname
science canbe None                  # If there are frames that will be science ***in addition to other frame types***, include the other frame types here.
science check condition1 lampstat01=Off&lampstat02=Off&lampstat03=Off&lampstat04=Off

### Bias/Dark frames
bias number 0                       # Number of bias frames to use
bias canbe None                     # If there are frames that will be bias ***in addition to other frame types***, include the other frame types here.
bias check condition1 exptime<=1    # Check the exposure time is less than 1 second
bias match naxis0 =0                # Match the row binning of bias and science frames
bias match naxis1 =0                # Match the column binning of bias and science frames

### Pixel Flat frames
pixflat idname OBJECT               # Header key value of flat frame for header keyword keyword+idname
pixflat number 5                    # Number of flat frames to use
pixflat canbe None                  # If there are frames that will be pixflat ***in addition to other frame types***, include the other frame types here.
pixflat lscomb False                # Combine a long and short flat
pixflat check condition1 lampstat01=On|lampstat02=On
pixflat check condition2 decker!=Pinhole   # Check that the decker name is not set to Pinhole
pixflat match naxis0 =0             # Match the row binning of flats with science
pixflat match naxis1 =0             # Match the column binning of flats with science
blzflat match slitlen %,:),1,>=0    # Make sure the slit length for blaze flats and science frames
pixflat combsame decker ''          # When combining pixel flat frames, make sure all frames have the same decker

### Blaze Flat frames
blzflat idname OBJECT               # Header key value of flat frame for header keyword keyword+idname
blzflat number 5                    # Number of flat frames to use
blzflat canbe None                  # If there are frames that will be blzflat ***in addition to other frame types***, include the other frame types here.
blzflat lscomb False                # Combine a long and short flat
blzflat check condition1 lampstat01=On|lampstat02=On
blzflat check condition2 decker!=Pinhole   # Check that the decker name is not set to Pinhole
blzflat match naxis0 =0             # Match the row binning of flats with science
blzflat match naxis1 =0             # Match the column binning of flats with science
blzflat match slitlen %,:),1,=0     # Match the slit length for blaze flats and science frames
blzflat combsame decker ''          # When combining blaze flat frames, make sure all frames have the same decker

### Trace frames
trace idname OBJECT               # Header key value of flat frame for header keyword keyword+idname
trace number 2                    # Number of flat frames to use
trace canbe None                  # If there are frames that will be blzflat ***in addition to other frame types***, include the other frame types here.
trace lscomb False                # Combine a long and short flat
trace check condition1 lampstat01=On|lampstat02=On
trace check decker Pinhole        # Check that the decker name is set to Pinhole
trace match naxis0 =0             # Match the row binning of flats with science
trace match naxis1 =0             # Match the column binning of flats with science
#trace match slitlen %,:),1,=0    # Match the Decker for trace flats and science frames
trace combsame decker ''          # When combining trace flat frames, make sure all frames have the same decker

### Arc frames
arc idname OBJECT                   # Header key value of arc frame for header keyword keyword+idname
arc number 1                        # Number of arc frames to use
arc canbe None                      # If there are frames that will be arc ***in addition to other frame types***, include the other frame types here.
arc lscomb False                    # Combine a long and short arc
arc check condition1 lampstat03=On|lampstat04=On
arc match naxis0 =0                 # Match the row binning of arcs with science
arc match naxis1 =0                 # Match the column binning of arcs with science
#arc match decker ''                 # Match the column binning of arcs with science
arc match slitlen %,:),1,=0         # Match the slit length for arcs and science frames
arc combsame decker ''              # When combining arc frames, make sure all frames have the same decker
